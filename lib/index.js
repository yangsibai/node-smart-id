// Generated by CoffeeScript 1.7.1
(function() {
  var generateRandomStr, getCondidates, lower, lowerSmart, number, numberSmart, upper, upperSmart, _,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  _ = require("underscore");

  lower = "abcdefghijklmnopqrstuvwxyz";

  lowerSmart = "abcdefghjkmnpqrstuvwxyz";

  upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

  upperSmart = "ABCDEFGHJKMNPRSTUVWXY";

  number = "0123456789";

  numberSmart = "3456789";


  /*
      generate id
      @param {Object} [options]
      @param {String} [options.mode = "aA0"] mode: 0 = 0 ~ 9, a = a ~ z, A = A ~ Z, s = smart, other characters = add these characters in candidate
      @param {Number} [options.length = 10]
      @return {String} random string
   */

  exports.make = function(options) {
    var condidates, defaultOptions, k, v;
    defaultOptions = {
      mode: "aA0",
      length: 10
    };
    if (options) {
      for (k in options) {
        v = options[k];
        defaultOptions[k] = v;
      }
    }
    console.log(defaultOptions.length);
    if (defaultOptions.length <= 0) {
      throw new Error("length should be a positive number");
    }
    if (!defaultOptions.mode) {
      throw new Error("mode should not be empty");
    }
    condidates = getCondidates(defaultOptions.mode);
    return generateRandomStr(condidates, defaultOptions.length);
  };


  /*
      get condidates characters
      @param {String} mode
      @return {String} condidate characters
   */

  getCondidates = function(mode) {
    var c, characters, isSmart, _i, _len;
    isSmart = __indexOf.call(mode, "s") >= 0;
    characters = "";
    for (_i = 0, _len = mode.length; _i < _len; _i++) {
      c = mode[_i];
      switch (c) {
        case "a":
          characters += (isSmart ? lowerSmart : lower);
          break;
        case "A":
          characters += (isSmart ? upperSmart : upper);
          break;
        case "0":
          characters += (isSmart ? numberSmart : number);
          break;
        default:
          characters += c;
      }
    }
    return characters;
  };


  /*
      generate a random string
      @param {String} condidateChars
      @param {Number} length
      @return {String} random string
   */

  generateRandomStr = function(condidateChars, length) {
    var i, randomStr, _i;
    randomStr = "";
    for (i = _i = 1; 1 <= length ? _i <= length : _i >= length; i = 1 <= length ? ++_i : --_i) {
      randomStr += condidateChars[~~(Math.random() * condidateChars.length)];
    }
    return randomStr;
  };

}).call(this);

//# sourceMappingURL=index.map
